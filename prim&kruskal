#include<stdio.h>
int ne=1,min_cost=0;
void main()
{
int n,i,j,min,cost[20][20],a,u,b,v,source,visited[20];
clrscr();
printf("enter the number of nodes:");
scanf("%d",&n);
printf("enter the cost matrix:\n");
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
scanf("%d",&cost[i][j]);
}
}
for(i=1;i<=n;i++)
visited[i]=0;
printf("enter the root node:");
scanf("%d",&source);
visited[source]=1;
printf("minimum cost spanning tree is\n");
while(ne<n)
{
min=999;
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
if(cost[i][j]<min)
if(visited[i]==0)
continue;
else
{
min=cost[i][j];
a=u=i;
b=v=j;
}
}
}
if(visited[u]==0||visited[v]==0)
{
printf("\nedge%d\t(%d->%d)=%d\n",ne++,a,b,min);
min_cost=min_cost+min;
visited[b]=1;
}
cost[a][b]=cost[b][a]=999;
}
printf("\nminimum cost=%d\n",min_cost);
}

output:
Enter no of vertices: 4
Enter the cost matrix:
0 1 5 2
1 0 0 0
5 0 0 3
2 0 3 0
Edges of spanning tree are:
Edge 1->2 = 1
Edge 1->4 = 2
Edge 3->4 = 3

Min cost = 6




#include<stdio.h>
int ne=1,min_cost=0;
void main()
{
int n,i,j,min,a,u,b,v,cost[20][20],parent[20];
clrscr();
printf("enter no of vertices:");
scanf("%d",&n);
printf("enter the cost matrix:\n");
for(i=1;i<=n;i++)
for(j=1;j<=n;j++)
scanf("%d",&cost[i][j]);
for(i=1;i<=n;i++)
parent[i]=0;
printf("\nthe edges of spanning tree are\n");
while(ne<n)
{
min=999;
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
if(cost[i][j]<min)
{
min=cost[i][j];
a=u=i;
b=v=j;
 }
}
}
while(parent[u])
u=parent[u];
while(parent[v])
v=parent[v];
if(u!=v)
{
 printf("Edge%d\t(%d->%d)=%d\n",ne++,a,b,min);
 min_cost=min_cost+min;
 parent[v]=u;
}
cost[a][b]=cost[a][b]=999;
}
printf("\nmin_cost=%d\n",min_cost);
}

Output:
Enter no of vertices: 4
Enter the cost matrix:
0 1 5 2
1 0 0 0
5 0 0 3
2 0 3 0
Edges of spanning tree are:
Edge 1->2 = 1
Edge 1->4 = 2
Edge 3->4 = 3

Min cost = 6
